


<!DOCTYPE html>
<html>
<head>
    <title>Executive Master in Digital and IT essentials</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
  
<body>

  <nav class="navbar navbar-expand-lg navbar-dark bg-dark"> 
    <div class="container">

        <!-- Website Logo -->
        <a class="navbar-brand" href="index">
        <img src="https://ai.vub.ac.be/wp-content/uploads/2022/10/Screenshot-2022-10-20-at-16.07.27-768x1085.png" alt="PPP" style="width:80px;" class="rounded-pill"> 
      </a>

      <!-- Toggle button for small screens -->
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>


      <!-- Navigation links -->
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="Foundations">Foundations</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="Technology">Technology</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="TechnologyII">TechnologyII</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="AI">AI</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="Cybersecurity">Cybersecurity</a>
          </li>
          <li class="nav-item">
            <a class="nav-link " href="ITstrategy">ITstrategy</a>
           </li>
          <li class="nav-item">
            <a class="nav-link" href="Methodology">Methodology</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="Digitallysolving">Solving real-world issues using digital</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <!--hier stopt de navbar -->
  
  <br> <!--enter -->

<div class="container">
 <!-- Read Medication Table -->
        <h2>Medication</h2>
        <table class="table table-hover">
            <thead class=table-success>
                <tr><!--tabelrij -->
   
                    <th>Name</th> <!--tabelheaders -->
                    <th>Stock</th>
                    <th>Expiry date</th>
                    <th>Category</th>
                    <th>Dosage Form</th>
                    <th>Species</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody id="medicationTableBody"> 
                <!-- Table rows will be populated dynamically using JavaScript -->
            </tbody>
        </table>

        <br>

   <!-- Create User Form -->
        <h2>Create medication</h2>
  
        <form id="createMedicationForm" method="post">
            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input type="text" class="form-control" id="name" name="name" required>
            </div>
            <div class="mb-3">
                <label for="stock" class="form-label">Stock</label>
                <input type="number" class="form-control" id="stock" name="stock" required>
            </div>
            <div class="mb-3">
                <label for="exp_date" class="form-label">Expiry date</label>
                <input type="date" class="form-control" id="exp_date" name="exp_date" required>
            </div>
            <div class="mb-3">
                <label for="category" class="form-label">Category</label>
                <input type="text" class="form-control" id="category" name="category" required>
            </div>
          <div class="mb-3">
                <label for="dosage" class="form-label">Dosage form</label>
                <input type="text" class="form-control" id="dosage" name="dosage_form" required>
            </div>
            <div class="mb-3">
                <label for="species" class="form-label">Species</label>
                <input type="text" class="form-control" id="species" name="species" required>
            </div>
            <button type="submit" class="btn btn-primary">Add medication</button>
        </form>
        <div class="container mt-3">
          <div class="alert alert-success" style="display: none;">
            You have succesfully added a new medication!
      </div>
    </div>

    <br>
<footer>
    <p> <b> &copy; 2023 Copyright PPP - <a href="https://ppp-bucket.s3.eu-west-2.amazonaws.com/index" target="_self">Purfect Pet Practice</a></p>
</footer>

    
<!-- BOOTSTRAP JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    </div>
  <script>
        // Function to fetch medication from the API
        function fetchMedication() {
            const url = 'https://qc9ird72ub.execute-api.eu-west-2.amazonaws.com/dev/ppp_medication/';

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const medications = JSON.parse(data.body).items; // we take items in the body. (cfr. payload)
                    const tableBody = document.getElementById('medicationTableBody');

                    // Clear existing rows
                    tableBody.innerHTML = '';

                    // Populate table rows with user data
                    
                        // a line a in table is  <tr>...</tr>
                        // a column in a table is <td>...</td>
                        //
                        // So one line with two columns is : 
                        //  <tr>
                        //      <td>value 1</td><td>value 2</td>
                        //  </tr>
                    
                    medications.forEach(medication => {
                        const row = document.createElement('tr');
                        row.innerHTML = '<td>' + medication.name + '</td>' +
                                        '<td>' + medication.stock + '</td>' +
                                        '<td>' + medication.exp_date + '</td>' +
                                        '<td>' + medication.category + '</td>' +
                                        '<td>' + medication.dosage_form + '</td>' +
                                        '<td>' + medication.species + '</td>' +
                                        // onclick op button om delete te doen; met 'this' om button mee te geven aan functie
                                        '<td> <button data-id="' + medication.medicationID +'" onclick="deleteMedication(this)" type="button" class="btn btn-outline-secondary">Delete</button></td>' 
                                        
                        tableBody.appendChild(row);
                    });
                })
                .catch(error => {
                    console.error('Unable to fetch Medications. Error:', error);
                });
        }

           // Function to create a new user using the API // hier moet je de naam van het veld gebruiken
        function createMedication(event) {
            event.preventDefault();

            const form = event.target;
            const name = form.name.value;
            const stock = form.stock.value;
            const exp_date = form.exp_date.value;
            const category = form.category.value;
            const dosage_form = form.dosage_form.value;
            const species = form.species.value;

            const url = 'https://qc9ird72ub.execute-api.eu-west-2.amazonaws.com/dev/ppp_medication/';

            const newMedication = {
                name: name,
                stock: stock,
                exp_date: exp_date,
                category: category,
                dosage_form: dosage_form,
                species: species,
            };
          
          console.log(newMedication)
          console.log(JSON.stringify(newMedication))

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newMedication)
            })
                .then(response => {
                        console.log(response);
                        response.json()
                  })
                .then(data => {
                    console.log('Medication created successfully:', data);
                    // Refresh the user table to display the newly created user, by calling the fetchUsers() function :-)
                    fetchMedication();
                    // Reset the form
                    form.reset();
                    showSuccessAlert();     // Show the success alert after adding a medication
                })
                .catch(error => {
                    console.error('Unable to create Medication. Error:', error);
                });
        }
        function showSuccessAlert() {
            // Get the alert container element
            const alertContainer = document.querySelector('.alert.alert-success');
            // Show the alert
            alertContainer.style.display = 'block';
        }
        function deleteMedication(element){
            console.log(element.getAttribute("data-id"))
            const medicationID = element.getAttribute("data-id");
            const url = 'https://qc9ird72ub.execute-api.eu-west-2.amazonaws.com/dev/ppp_medication/';
          
            const deleteMedication = {
              medicationID : medicationID
            }
          
            fetch(url, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(deleteMedication)
            })
                .then(response => {
                        console.log(response);
                        response.json()
                  })
                .then(data => {
                    console.log('Medication deleted successfully:', data);
                    // Refresh the user table to display the newly created user, by calling the fetchUsers() function :-)
                    fetchMedication();
                })
                .catch(error => {
                    console.error('Unable to delete Medication. Error:', error);
                });
        }

        // Fetch users when the page loads
        fetchMedication();
    
        // Add event listener to the form submit event
        // when we click on submit, we trig the createUser() function
        document.getElementById('createMedicationForm').addEventListener('submit', createMedication);
    </script>

</body>
</html>
<!-- partial -->
  
</body>
</html>
